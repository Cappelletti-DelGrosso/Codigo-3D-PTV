clear all
close all

%Vi=[245.341105175733 485.129748571246;270.877405718770 490.057998917417;283.006234687126 450.824026177941;298.266063055250 495.318264317063;309.926482783625 455.894115839180;320.315505455884 416.948755784807;327.002329408733 502.078004929116;336.498712918370 459.696616364930;347.595876564652 421.272595905361;356.719653453319 508.288624669112;357.184616685537 383.153097417623;365.749334656885 465.200976641941;374.717925831944 424.698343374361;384.768003648773 386.984871290514;386.806910689998 514.951211907240;393.249181194607 349.758649223582;395.777295611422 471.333975380708;403.702888682079 429.139215685115;412.569138760698 390.115210617639;418.055402698028 521.289624912279;421.317679241325 352.991954253743;426.436645936947 477.298567789843;429.002698214063 316.187924612475;434.270395611744 434.840580963541;441.581317518912 393.226728959362;450.086967550637 356.043974037503;450.559083717766 528.214777875100;457.214712896010 318.988713883757;458.057944701365 483.142471699756;465.671058273066 440.251286683222;472.562332546257 398.628686794208;479.015915474217 358.296657468426;483.675998470036 534.858528571256;486.626347359486 321.977961169917;490.867339473564 488.999766471769;497.579054065084 445.457743510888;504.534830822129 403.723191216375;510.600120154290 362.903268976253;516.269155500786 324.091906017013;524.691232218078 495.042011413576;530.774560173772 450.363236913502;536.817820877993 408.038551675077;542.779956863808 367.250579686661;548.234243200750 327.983012795645;564.972621245551 455.638589702655;570.364784537096 412.217545913062;575.596025559278 370.930228576029;580.231123017093 330.961535594466;604.934871552020 416.777227546460;609.455442038487 374.652250594376;613.407237488071 333.980408007634;644.501451916060 378.109942189268;647.924190973974 336.868680295133;683.469218443377 340.093530289096];
Vi=[598.553761500697 398.473760085023;619.292767294394 384.164035253248;635.727026027868 431.666948600864;639.119703297383 370.925826578166;655.862144396698 416.305141805437;657.989307542404 358.045880245941;673.445867451042 464.566825810554;675.000769042611 402.058855592987;675.876112286981 345.994039928744;693.088251856619 388.344395000430;692.661979519426 448.628833489293;693.226082667954 334.032787230428;709.863153568336 322.932374909791;710.483103117109 375.516999235045;711.004154266205 433.289573657563;711.539040969810 497.385712298788;725.546840372066 311.999717010801;726.875318254983 363.115787326192;728.321893308302 419.023156359641;729.803329865110 480.833546327298;740.636550023967 301.699260343336;742.825065347595 351.118727364950;744.945196317306 405.140432604066;747.249824694299 464.827640494627;749.535510604522 530.892603891398;757.913328152812 339.860670937255;760.750078881631 392.043548400382;763.876351984510 449.628715052307;767.157363018199 512.708731287355;772.482380694781 328.680387570340;775.923872555537 379.560582574970;779.737164023348 435.108573274990;783.588661861431 496.319990978403;787.749289781384 562.377405862342;790.333449691431 367.443516746877;794.782716869490 421.238988123045;799.552096372500 480.084329763587;804.034352870404 545.561487888941;804.217152714335 355.784483172895;809.237789586900 408.004500485331;814.323236179511 465.007713879788;820.732908033804 527.035725570947;822.954510419929 395.248886623763;828.722465667372 450.640374573448;835.087989458420 511.092045921010;836.232372729112 383.029836846278;842.522812124998 436.657814800552;849.307912347308 494.958906431009;855.641353339507 423.382207443074;862.874829753198 480.046598980264;868.095039108516 410.207845476888;875.878914048564 465.448857614134;888.199516549043 451.345697575156;900.240189510673 437.862504188792];

graf=1;

N=length(Vi);

if graf==1
    figure
    scatter(Vi(:,1), Vi(:,2) )
    daspect([1,1,1])
    hold on
end


[enx,I]=sort(Vi(:,1));
D=sort([I(1), I(end)]);
[eny,J]=sort(Vi(:,2));
p(:,1)=Vi(I(1),:);
p(:,2)=Vi(I(end),:);
p(:,3)=Vi(J(1),:);;
p(:,4)=Vi(J(end),:);

if graf==1
        scatter(p(1,:), p(2,:), 'ro')
end
pause


    A=Vi-p(:,1)';
    pendiente= abs(A(:,2)./A(:,1));
    angulo = 180/pi*atan(pendiente);
    [~,I]=max(angulo);
    q(:,1)=Vi(I,:);
    

    A=Vi-p(:,2)';
    pendiente= abs(A(:,2)./A(:,1));
    angulo = 180/pi*atan(pendiente);
    [~,I]=max(angulo);
    q(:,2)=Vi(I,:);
    %pause
    
    
    A=Vi-p(:,3)';
    pendiente= abs(A(:,2)./A(:,1))
    angulo = 180/pi*atan(pendiente)
    [~,I]=min(angulo)
    q(:,3)=Vi(I,:)
    
    
    A=Vi-p(:,4)';
    pendiente= abs(A(:,2)./A(:,1));
    angulo = 180/pi*atan(pendiente);
    [~,I]=min(angulo);
    q(:,4)=Vi(I,:);

    if graf==1
        scatter(q(1,1), q(2,1),'go')
        pause
        scatter(q(1,2), q(2,2),'go')
        pause
        scatter(q(1,3), q(2,3),'go')
        pause
        scatter(q(1,4), q(2,4),'go')
        pause
    end
    
    esquinas=[];
    %intersecciones
    E=[1,2];
    F=[3,4];
    
    for ii=1:2
        for jj=1:2
            a=E(ii);
            b=F(jj);
            x1 = p(1,a); 
            y1 = p(2,a);
            x2 = q(1,a);
            y2 = q(2,a);
            x3 = p(1,b); 
            y3 = p(2,b);
            x4 = q(1,b);
            y4 = q(2,b);

            clear A
            A = [(y2-y1), -(x2-x1);...
            (y4-y3), -(x4-x3)];
            b = [(y2-y1)*x1-(x2-x1)*y1;...
            (y4-y3)*x3-(x4-x3)*y3];
            PInt = A\b;
            
            %scatter(PInt(1), PInt(2),'rx')
            
            dist=sqrt((Vi(:,1)-PInt(1)).^2+(Vi(:,2)-PInt(2)).^2);
            [~,I]=min(dist);
            
            esquinas=[esquinas, Vi(I,:)'];
            %pause
        end
    end
    
    esquinas
    centro=[mean(esquinas(1,:)); mean(esquinas(2,:))];
    scatter(centro(1), centro(2), 'bx')
    pause
    
    [~,I]=sort(esquinas(1,:)); %busco las 2 minimas coordenadas en x
    [~,J]=sort(esquinas(2,I(1:2))); %de esas 2 esquinas me quedo con la que tiene mínima componente en y
    e1=I(J(1));
    
    [esquina1, esquina2, esquina3, esquina4]=ordenaresquinas(esquinas,e1)
    plot([esquina1(1), esquina2(1), esquina3(1), esquina4(1)],[esquina1(2), esquina2(2), esquina3(2), esquina4(2)])
    
    esquinas(:,1)=esquina1;
    esquinas(:,2)=esquina2;
    esquinas(:,3)=esquina3;
    esquinas(:,4)=esquina4;
    
    red1 = esquina1+(esquina1-centro)/norm(esquina1-centro)*10; %encierro a los puntos con una red
    red2 = esquina2+(esquina2-centro)/norm(esquina2-centro)*10;
    red3 = esquina3+(esquina3-centro)/norm(esquina3-centro)*10;
    red4 = esquina4+(esquina4-centro)/norm(esquina4-centro)*10;

    xv=[red1(1), red2(1), red3(1), red4(1)];
    yv=[red1(2), red2(2), red3(2), red4(2)];
    [in]=inpolygon( Vi(:,1), Vi(:,2) ,xv ,yv );
    hold on
    scatter(xv, yv, 'gx')
    pause
    if sum(in)~= size(Vi,1)
     
        disp('Error: No se encontraron las esquinas.')
        stop
    end
    
    esquina1=esquinas(:,1)';
    esquina2=esquinas(:,2)';
    esquina3=esquinas(:,3)';
    esquina4=esquinas(:,4)';
    
    if graf==1
        scatter([esquina1(1), esquina2(1), esquina3(1), esquina4(1)], [esquina1(2), esquina2(2), esquina3(2), esquina4(2)], 'mo')
    end
       
    [linea12, J12]=encontrarlinea4(esquina1, esquina2, Vi);
    pause
    [linea14, J14]=encontrarlinea4(esquina1, esquina4, Vi);
    
    [tablero, I] = sort([length(linea12), length(linea14)]);
    Viorden = [];
    
    if I(2)==1
        Viorden = [Viorden, linea12];
        nuevoinicial = linea14(:,2)';
        final = linea12(:,end)';
        [auxiliar, ~]=encontrarlinea4(final, esquina3, Vi);
        nuevofinal= auxiliar(:,2)';
        Vi=Vi(J12==1,:);
    else
        esquina2a=esquina4;
        esquina4a=esquina2;
        esquina2=esquina2a;
        esquina4=esquina4a;
        nuevoinicial = linea12(:,2)';
        final= linea14(:,end)';
        [auxiliar, ~]=encontrarlinea4(final, esquina3, Vi);
        nuevofinal= auxiliar(:,2)';
        Viorden = [Viorden, linea14];
        Vi=Vi(J14==1,:);

    end
    Viorden
    while size(Viorden,2)~=N
        nuevoinicial
        nuevofinal
        [linea, J]=encontrarlinea4(nuevoinicial, nuevofinal, Vi);
        Viorden = [Viorden, linea]
        
        if length(Viorden)~=N
            [auxiliar, ~]=encontrarlinea4(nuevoinicial, esquina4, Vi)
            nuevoinicial = auxiliar(:,2)';
            final= linea(:,end)';
            [auxiliar, ~]=encontrarlinea4(final, esquina3, Vi);
            nuevofinal= auxiliar(:,2)';
        end
        Vi=Vi(J==1,:);
        
    end
    
    

